"""Initial migration

Revision ID: 78db74585aed
Revises: 
Create Date: 2025-04-29 13:49:58.518179

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '78db74585aed'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assets',
    sa.Column('asset_type', sa.Enum('STOCK', 'OPTION', name='asset_type_enum'), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('currency', sa.Enum('USD', 'EUR', 'GBP', 'JPY', 'CAD', 'AUD', 'CHF', 'NZD', 'HKD', 'SGD', name='currency_enum'), nullable=False),
    sa.Column('option_type', sa.Enum('CALL', 'PUT', name='option_type_enum'), nullable=True),
    sa.Column('strike_price', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('underlying_asset_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['underlying_asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assets_asset_type'), 'assets', ['asset_type'], unique=False)
    op.create_index(op.f('ix_assets_symbol'), 'assets', ['symbol'], unique=False)
    op.create_index('uq_asset_option_contract', 'assets', ['underlying_asset_id', 'option_type', 'strike_price', 'expiration_date'], unique=True, postgresql_where=sa.text("asset_type = 'OPTION'::asset_type_enum"))
    op.create_index('uq_asset_stock_symbol', 'assets', ['symbol'], unique=True, postgresql_where=sa.text("asset_type = 'STOCK'::asset_type_enum"))
    op.create_table('users',
    sa.Column('auth0_sub', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_auth0_sub'), 'users', ['auth0_sub'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('clubs',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('bank_account_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clubs_creator_id'), 'clubs', ['creator_id'], unique=False)
    op.create_index(op.f('ix_clubs_name'), 'clubs', ['name'], unique=False)
    op.create_table('club_memberships',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('club_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'MEMBER', 'READ_ONLY', name='club_role_enum'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'club_id', name='uq_user_club')
    )
    op.create_index(op.f('ix_club_memberships_club_id'), 'club_memberships', ['club_id'], unique=False)
    op.create_index(op.f('ix_club_memberships_user_id'), 'club_memberships', ['user_id'], unique=False)
    op.create_table('funds',
    sa.Column('club_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('brokerage_cash_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit_value_histories',
    sa.Column('club_id', sa.UUID(), nullable=False),
    sa.Column('valuation_date', sa.Date(), nullable=False),
    sa.Column('total_club_value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('total_units_outstanding', sa.Numeric(precision=25, scale=8), nullable=False),
    sa.Column('unit_value', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('club_id', 'valuation_date', name='uq_club_valuation_date')
    )
    op.create_index(op.f('ix_unit_value_histories_valuation_date'), 'unit_value_histories', ['valuation_date'], unique=False)
    op.create_table('fund_splits',
    sa.Column('club_id', sa.UUID(), nullable=False),
    sa.Column('fund_id', sa.UUID(), nullable=False),
    sa.Column('split_percentage', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
    sa.ForeignKeyConstraint(['fund_id'], ['funds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('club_id', 'fund_id', name='uq_club_fund_split')
    )
    op.create_index(op.f('ix_fund_splits_club_id'), 'fund_splits', ['club_id'], unique=False)
    op.create_index(op.f('ix_fund_splits_fund_id'), 'fund_splits', ['fund_id'], unique=False)
    op.create_table('member_transactions',
    sa.Column('membership_id', sa.UUID(), nullable=False),
    sa.Column('transaction_type', sa.Enum('DEPOSIT', 'WITHDRAWAL', name='member_transaction_type_enum'), nullable=False),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('unit_value_used', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('units_transacted', sa.Numeric(precision=25, scale=8), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['membership_id'], ['club_memberships.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_member_transactions_membership_id'), 'member_transactions', ['membership_id'], unique=False)
    op.create_index(op.f('ix_member_transactions_transaction_date'), 'member_transactions', ['transaction_date'], unique=False)
    op.create_table('positions',
    sa.Column('fund_id', sa.UUID(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('average_cost_basis', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['fund_id'], ['funds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fund_id', 'asset_id', name='uq_fund_asset_position')
    )
    op.create_table('transactions',
    sa.Column('fund_id', sa.UUID(), nullable=True),
    sa.Column('asset_id', sa.UUID(), nullable=True),
    sa.Column('transaction_type', sa.Enum('CLUB_EXPENSE', 'BANK_TO_BROKERAGE', 'BROKERAGE_TO_BANK', 'BUY_STOCK', 'SELL_STOCK', 'DIVIDEND', 'BANK_INTEREST', 'BROKERAGE_INTEREST', 'BUY_OPTION', 'SELL_OPTION', 'CLOSE_OPTION_BUY', 'CLOSE_OPTION_SELL', 'OPTION_EXPIRATION', 'OPTION_EXERCISE', 'OPTION_ASSIGNMENT', 'INTERFUND_CASH_TRANSFER', 'INTERFUND_POSITION_TRANSFER', 'ADJUSTMENT', 'REVERSAL', name='transaction_type_enum'), nullable=False),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('price_per_unit', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('fees_commissions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('related_transaction_id', sa.UUID(), nullable=True),
    sa.Column('reverses_transaction_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['fund_id'], ['funds.id'], ),
    sa.ForeignKeyConstraint(['related_transaction_id'], ['transactions.id'], ),
    sa.ForeignKeyConstraint(['reverses_transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_reverses_transaction_id'), 'transactions', ['reverses_transaction_id'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_date'), 'transactions', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_type'), 'transactions', ['transaction_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_transaction_type'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_transaction_date'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_reverses_transaction_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_member_transactions_transaction_date'), table_name='member_transactions')
    op.drop_index(op.f('ix_member_transactions_membership_id'), table_name='member_transactions')
    op.drop_table('member_transactions')
    op.drop_index(op.f('ix_fund_splits_fund_id'), table_name='fund_splits')
    op.drop_index(op.f('ix_fund_splits_club_id'), table_name='fund_splits')
    op.drop_table('fund_splits')
    op.drop_index(op.f('ix_unit_value_histories_valuation_date'), table_name='unit_value_histories')
    op.drop_table('unit_value_histories')
    op.drop_table('funds')
    op.drop_index(op.f('ix_club_memberships_user_id'), table_name='club_memberships')
    op.drop_index(op.f('ix_club_memberships_club_id'), table_name='club_memberships')
    op.drop_table('club_memberships')
    op.drop_index(op.f('ix_clubs_name'), table_name='clubs')
    op.drop_index(op.f('ix_clubs_creator_id'), table_name='clubs')
    op.drop_table('clubs')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_auth0_sub'), table_name='users')
    op.drop_table('users')
    op.drop_index('uq_asset_stock_symbol', table_name='assets', postgresql_where=sa.text("asset_type = 'STOCK'::asset_type_enum"))
    op.drop_index('uq_asset_option_contract', table_name='assets', postgresql_where=sa.text("asset_type = 'OPTION'::asset_type_enum"))
    op.drop_index(op.f('ix_assets_symbol'), table_name='assets')
    op.drop_index(op.f('ix_assets_asset_type'), table_name='assets')
    op.drop_table('assets')
    # ### end Alembic commands ###
